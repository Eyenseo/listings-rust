\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{listings-rust}[2018/01/23 Custom Package]

\RequirePackage{color}
\RequirePackage{listings}
\RequirePackage{xparse}
\RequirePackage{expl3}

\def\noprint#1{}

\ExplSyntaxOn
\NewDocumentCommand\lifetime{}
{
  \tl_set:No \l_demo_tl {\the\use:c{lst@token}}
  % Lifetimes
  \regex_replace_all:nnN {
    \A(\c{lst@um&}?)(\c{lst@um'}\w+(?:[^\c{lst@um'}]|\Z))
  }
  {
    \cB{
      \1
      \c{lst@keywordstyle5}
      \cB{
        \2
        \cE
      }
      \cE
    }
  }
  \l_demo_tl
  % mut / ptr type
  \regex_replace_all:nnN {
    \A([\c{lst@um&}\c{lst@um\*}]?(?:mut|const)|(?:mut|const))
  }
  {
    \cB{
      \c{lst@keywordstyle6}
      \cB{
        \1
        \cE
      }
      \cE
    }
  }
  \l_demo_tl
  % borrow and pointer
  \regex_replace_all:nnN {
    (\c{lst@um&}(?:\c{lst@um\*})*|(?:\c{lst@um&})*(?:\c{lst@um\*})+)([^\s\c{lst@um\*}\c{lst@um&}])
  }
  {
    \cB{
      \c{lst@keywordstyle6}
      \cB{
        \1
        \cE
      }
      \cE
    }
    \2
  }
  \l_demo_tl
  % character
  \regex_replace_all:nnN {
    (\c{lst@um'}\w\c{lst@um'})
  }
  {
    \cB{
      \c{lst@stringstyle}
      \cB{
        \1
        \cE
      }
      \cE
    }
  }
  \l_demo_tl
  % macro
  \regex_replace_all:nnN {
    \A(\w+!\Z)
  }
  {
    \cB{
      \c{lst@keywordstyle4}
      \cB{
        \1
        \cE
      }
      \cE
    }
  }
  \l_demo_tl
  % Types
  \regex_replace_all:nnN {
    \A([A-Z][a-zA-Z0-9]*)
  }
  {
    \cB{
      \c{lst@keywordstyle7}
      \cB{
        \1
        \cE
      }
      \cE
    }
  }
  \l_demo_tl

  \tl_use:N \l_demo_tl
  \noprint
}
\ExplSyntaxOff

\lstdefinelanguage{Rust}{%
sensitive%
, morecomment=[l]{//}%
, morecomment=[s]{/*}{*/}%
, moredelim=[s][{\itshape\color[rgb]{0,0,0.75}}]{\#[}{]}%
, morestring=[b]{"}%
, alsodigit={}%
, alsoother={}%
, alsoletter={!'&*\_\{}%
, identifierstyle=\lifetime
%
%
% [1] reserve keywords
% [2] primitive types
% [3] value constructors
% [4] macros
% [5] lifetimes
% [6] access
% [7] Types
%
, morekeywords={break, continue, else, for, if, in, loop, match, return, while}  % control flow keywords
, morekeywords={as, let, move, ref, static}  % in the context of variables
, morekeywords={enum, fn, impl, Self, self, struct, trait, type, use, where}  % in the context of declarations
, morekeywords={crate, extern, mod, pub, super}  % in the context of modularisation
, morekeywords={unsafe}  % markers
, morekeywords={abstract, alignof, become, box, do, final, macro, offsetof, override, priv, proc, pure, sizeof, typeof, unsized, virtual, yield}  % reserved identifiers
%
, morekeywords=[2]{bool, char, f32, f64, i8, i16, i32, i64, isize, str, u8, u16, u32, u64, unit, usize, i128, u128}  % primitive types
%
, morekeywords=[3]{Err, false, None, Ok, Some, true}  % prelude value constructors
}%
